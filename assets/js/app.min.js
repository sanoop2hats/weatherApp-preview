// declaration elements
const errorMsg = document.querySelector('.error-msg');
const currentTemp = document.querySelector('.Ctemp');
const description = document.querySelector('.description');
const weatherIcon = document.querySelector('.weather-set-icon');
const humidity = document.querySelector('.humidity');
const wind = document.querySelector('.wind');
const secBg = document.querySelector('.weather-bg');
const city = document.querySelector('.current-location');
const highTemp = document.querySelector('.high-temp');
const lowTemp = document.querySelector('.low-temp');
const dateEl = document.querySelector('.current-date');
const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
const currentDate = new Date();
const month = currentDate.getMonth();
const date = currentDate.getDate();
const day = currentDate.getDay();

// ends

// current date 
dateEl.innerHTML = days[day] + ', ' + date + ' ' + months[month]
// end

const key = "82005d27a116c2880c8f0fcb866998a0" // API key
var weather = {
    getLocation: function () {
        if ('geolocation' in navigator) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            errorMsg.innerHTML = "Geolocation is not supported by this browser.";
        }
        // success function Geolocation
        function showPosition(position) {
            let latitude = position.coords.latitude;
            let longitude = position.coords.longitude;
            weather.getWeather(latitude, longitude)
        }
        // ends
    },
    getWeather: function (latitude, longitude) {
        let api = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`; //API for forecast  call
        fetch(api)
            .then(function (response) {
                let data = response.json();
                return data;
            })
            .then(function (data) {
                // console.log(data);
                currentTemp.value = Math.floor(data.main.temp - 272);
                highTemp.value = Math.floor(data.main.temp_max - 272);
                lowTemp.value = Math.floor(data.main.temp_min - 272);
                description.value = data.weather[0].description;
                weatherIcon.value = data.weather[0].icon;
                humidity.value = data.main.humidity;
                wind.value = data.wind.speed;
                city.value = data.name;
                weather.weatherReport(data);
                if (weatherIcon.value.includes("d")) {
                    secBg.className = 'weather-bg daybg';
                } else {
                    secBg.className = 'weather-bg nightbg';
                }

            })
            .then(function () {
                weather.displayWeather();
            });
    },
    displayWeather: function () {
        currentTemp.innerHTML = currentTemp.value + '<sup>°c</sup>';
        description.innerHTML = description.value;
        city.innerHTML = city.value;
        highTemp.innerHTML = highTemp.value + '<sup>°c</sup>';
        lowTemp.innerHTML = lowTemp.value + '<sup>°c</sup>';
        humidity.innerHTML = humidity.value + '<span>%</span>';
        wind.innerHTML = wind.value + '<span>Km/h</span>';
        weatherIcon.innerHTML = `<img src="assets/img/${weatherIcon.value}.png" alt="Weather Icon"/> `;
    },

    // Forecast API
    weatherReport: function (data) {

        let apiFForcast = `https://api.openweathermap.org/data/2.5/forecast?q=${data.name}&exclude=hourly,minutely&units=metric&appid=${key}`
        fetch(apiFForcast)
            .then(function (res) {
                let forecast = res.json();
                return forecast;

            })
            .then(function (forecast) {
                weather.list = forecast.list.length;
                weather.listArray = forecast.list;

            })
            .then(function () {
                weather.dayForecast()
            });
    },
    //  Next four days weather forecast
    dayForecast: function (forecast) {
        document.querySelector('.weekF').innerHTML = ''
        for (let i = 4; i < weather.list; i += 8) {
            let div = document.createElement('div');
            div.setAttribute('class', 'dayF forcast-box');

            let day = document.createElement('p');
            day.setAttribute('class', 'date')
            day.innerText = new Date(weather.listArray[i].dt * 1000).toDateString(undefined, 'Asia/Kolkata');
            div.appendChild(day);
            let temp = document.createElement('p');
            temp.setAttribute('class', 'tempset')
            temp.innerText = Math.floor((weather.listArray[i].main.temp_max)) + ' °C' + ' / ' + Math.floor((weather.listArray[i].main.temp_min)) + ' °C';
            div.appendChild(temp)
            let description = document.createElement('p');
            description.setAttribute('class', 'desc')
            description.innerText = weather.listArray[i].weather[0].description;
            div.appendChild(description);

            document.querySelector('.weekF').appendChild(div)
        }
    },
    init: function () {
        weather.getLocation();
        // weather.dayForecast();
    }
}

weather.init();